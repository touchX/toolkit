/* ==========================================================================
   COMPONENT / #ROUNDEL
   ========================================================================== */

// Imports
@import "sky-toolkit-core/tools";

// Settings
$roundel-border-opacity: 1;
$roundel-border-width: $global-border-width;
$roundel-highlight-width: 3px;
$roundel-size: 50px;
$roundel-size-small: $roundel-size - 10px;
$roundel-label-size: 14px;

/* Base
   =========================================== */

/**
 * Roundel
 *
 * For inputs used as a radio button (`.c-roundel`) to allow the selection of a product variant.
 * The overall wrapper for the roundel component
 * Is rendered as a <label> element.
 */
.c-roundel {
  cursor: pointer;
  display: inline-block;
  position: relative;
}

/**
 * Roundel Icon
 *
 * Roundel's can also make use of icons as well as colours and text based labels.
 * This class should be applied to the path of the SVG that you are using.
 */
.c-roundel__icon {
  fill: color(brand);
}

/**
 * Roundel Input
 *
 * The <input> radio element that is responsible for the selection
 *
 * 1. We use the hide-visually() mixin to hide the html input element from the user
 *    but the input remains functional when the user selects a roundel.
 * 2. Due to issues with 'janking' on the border, the blue highlight as set via a :before
 *    selector which allows greater flexibility when applying a transition to the opacity
 *    of the highlight.
 * 3. Override default styles for .c-roundel__label to indicate the selected state.
 */
.c-roundel__input {
  @include hide-visually(); /* [1] */

  &:checked + .c-roundel__option::before,
  &:checked + .c-roundel__option::after {
    opacity: 1; /* [2] */
  }

  &:checked + .c-roundel__option {
    /*! autoprefixer: off */
    transform: scale(1);

    /* [3] */
    .c-roundel__label {
      font-weight: bold;
    }
  }

  &:focus + .c-roundel__option {
    @include focus-styles();
  }
}

/**
 * Roundel Option
 *
 * The component that the user interacts with
 *
 * 1. In order to offset the border we need to apply top and left properties.
 *    This is why we have -1px values for both.
 *
 * 2. As briefly covered earlier in the file we achieve the blue highlight with styles
 *    via the :before selector. This means we can deliver a smoother experience with
 *    transition of the highlight. By default opacity is always 0, this changes to 1
 *    when the user checks the roundel.
 *
 * 3. The ::after selector is required here as an alternative to a previous
 *    implementation of the border property against the base of the
 *    .c-roundel__option  component. This style handles the inner white border.
 */
.c-roundel__option {
  /*! autoprefixer: off */
  border: $roundel-border-width solid color(grey-20);
  border-radius: 50%;
  display: table;
  height: $roundel-size-small;
  width: $roundel-size-small;
  transform: scale(0.85);
  will-change: transform;
  transition: all 0.25s linear;

  @include mq($from: small) {
    height: $roundel-size - 1;
    width: $roundel-size - 1;
  }

  &:hover {
    transform: scale(1);
  }

  &::before,
  &::after {
    content: "";
    border-radius: 50%;
    height: $roundel-size;
    left: -1px; /* [1] */
    top: -1px;
    opacity: 0;
    position: absolute;
    width: $roundel-size;
    transition: opacity 0.25s linear;
  }

  /* [2] */
  &::before {
    border: 3px solid color(brand);
    z-index: z-index(2);
  }

  /* [3] */
  &::after {
    border: 6px solid color(white);
    z-index: z-index(1);
  }
}

/**
 * Roundel Label
 *
 * The label is to present a variant to the user.
 * For example, this could be a storage option e.g. 32GB or a colour.
 * The .c-roundel__label is a child of .c-roundel__option which sits within
 * the .c-roundel element (the main wrapper for an individual roundel).
 *
 * For example:
 * <div class="c-roundel">
 *   <input type="radio" class="c-roundel__input">
 *   <div class="c-roundel__option">
 *    <span class="c-roundel__label">32gb</span>
 *   </div>
 * </div>
 *
 *
 * 1. By default the background colour for .c-roundel__label is white. But if we are rendering a
 *    colour-picker, toolkit-react will set an inline style which equates to the provided colour.
 *
 * 2. Roundel Colour Selectors need to have their label styled differently to accomodate a quirk
 *    within Safari. We get around this issue by using absolute positioning rather than relative.
 */
.c-roundel__label {
  @include font(text-smallprint);
  position: relative;
  display: table-cell;
  vertical-align: middle;
  border-radius: 50%;
  background-color: color(white); /* [1] */
  text-align: center;
  text-transform: uppercase;
  border: 4px solid transparent;
  transition: all 0.25s linear;

  @include mq($from: small) {
    @include rem($roundel-label-size);
  }
}

/* [2] */
.c-roundel--color {
  .c-roundel__label {
    height: 100%;
    left: 0;
    position: absolute;
    top: 0;
    width: 100%;
  }
}

/**
 * Roundel Group
 *
 * The wrapper which sits above a collection of roundels. Use this wrapper component
 * when you wish to display multiple roundels. This prevents the application of
 * margin-right to a single roundel, which would not be necessary in this scenario.
 */
.c-roundel-group {
  .c-roundel {
    margin-right: $global-spacing-unit-tiny;
  }
}
